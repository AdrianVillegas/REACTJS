"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _react = require("react");

var _reactDisplayName = _interopRequireDefault(require("react-display-name"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; var ownKeys = Object.keys(source); if (typeof Object.getOwnPropertySymbols === 'function') { ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) { return Object.getOwnPropertyDescriptor(source, sym).enumerable; })); } ownKeys.forEach(function (key) { _defineProperty(target, key, source[key]); }); } return target; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

const safeTimerFactory = (setFn, clearFn, propName, hocName) => Target => {
  class SafeTimer extends _react.Component {
    constructor(props, context) {
      super(props, context);
      this.unsubscribers = [];
      this[propName] = this[propName].bind(this);
    }

    componentWillUnmount() {
      this.unsubscribers.forEach(unsubscribe => unsubscribe());
      this.unsubscribers = [];
    }

    [propName](...args) {
      const id = setFn(...args);

      const unsubscriber = () => clearFn(id);

      this.unsubscribers.push(unsubscriber);
      return unsubscriber;
    }

    render() {
      return (0, _react.createElement)(Target, _objectSpread({}, this.props, {
        [propName]: this[propName]
      }));
    }

  }

  if (process.env.NODE_ENV !== 'production') {
    SafeTimer.displayName = `${hocName}(${(0, _reactDisplayName.default)(Target)})`;
  }

  return SafeTimer;
};

var _default = safeTimerFactory;
exports.default = _default;